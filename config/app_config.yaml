# Crawl4AI 应用统一配置文件
# 包含数据库、对象存储、AI服务等所有配置参数

# 应用基础配置
app:
  name: "Crawl4AI Demo"
  version: "1.0.0"
  debug: false
  log_level: "INFO"
  
# 服务器配置
server:
  host: "0.0.0.0"
  port: 8080
  workers: 4
  timeout: 300
  max_request_size: 100  # MB

# PostgreSQL数据库配置
database:
  # 连接参数
  host: "10.0.203.172"
  port: 5432
  name: "user_tZGjBb"
  username: "user_tZGjBb"
  password: "password_fajJed"
  
  # 连接池配置
  pool:
    size: 10
    max_overflow: 20
    pre_ping: true
    echo: false  # 设置为true可以看到SQL语句
    
  # 连接超时配置
  timeout:
    connect: 30
    query: 60
    
  # SSL配置
  ssl:
    enabled: false
    mode: "prefer"  # disable, allow, prefer, require, verify-ca, verify-full

# MinIO对象存储配置
minio:
  # 连接参数
  endpoint: "10.0.203.172:9000"
  access_key: "minio_mB5rB7"
  secret_key: "minio_fndehr"
  secure: false  # HTTP连接，不使用HTTPS
  region: "us-east-1"
  
  # 存储桶配置
  buckets:
    default: "crawl4ai-files"
    markdown: "crawl4ai-markdown"
    ai_results: "crawl4ai-ai-results"
    json: "crawl4ai-json"
    
  # 上传配置
  upload:
    max_file_size: 100  # MB
    allowed_types:
      - "text/markdown"
      - "application/json"
      - "text/plain"
      - "application/octet-stream"
    
  # 预签名URL配置
  presigned_url:
    default_expires: 3600  # 1小时，单位：秒
    max_expires: 86400     # 24小时，单位：秒

# AI服务配置
ai:
  # OpenAI配置
  openai:
    api_key: "your-openai-api-key-here"
    base_url: "https://api.openai.com/v1"
    model: "gpt-3.5-turbo"
    max_tokens: 2000
    temperature: 0.1
    timeout: 60

  # Azure OpenAI配置
  azure_openai:
    api_key: "your-azure-openai-api-key"
    endpoint: "https://your-resource.openai.azure.com/"
    api_version: "2024-02-15-preview"
    deployment_name: "gpt-35-turbo"
    max_tokens: 2000
    temperature: 0.1
    timeout: 60

  # 本地LLM配置（如Ollama）
  local_llm:
    base_url: "http://localhost:11434"
    model: "llama2"
    max_tokens: 2000
    temperature: 0.1
    timeout: 120

  # 通义千问配置
  qwen:
    api_key: "sk"
    base_url: "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"
    model: "qwen3-max-preview"
    max_tokens: 20000
    temperature: 0.1
    timeout: 60

  # 默认使用的LLM提供商
  default_provider: "qwen"

  # AI提取配置
  extraction:
    # 数据提取模式
    modes:
      - "structured_data"    # 结构化数据提取
      - "content_summary"    # 内容摘要
      - "key_points"         # 关键点提取
      - "entities"           # 实体识别
      - "sentiment"          # 情感分析
    
    # 默认提取模式
    default_mode: "structured_data"
    
    # 是否保存AI提取结果
    save_results: true
    
    # 提取提示词模板
    prompts:
      structured_data: |
        请从以下网页内容中提取结构化数据，以JSON格式返回：
        - 标题
        - 主要内容摘要
        - 关键词
        - 发布时间（如果有）
        - 作者信息（如果有）
        
        网页内容：
        {content}
      
      content_summary: |
        请为以下网页内容生成一个简洁的摘要（不超过200字）：
        
        {content}
      
      key_points: |
        请从以下网页内容中提取5-10个关键要点，以列表形式返回：
        
        {content}
      
      entities: |
        请从以下网页内容中识别并提取以下类型的实体：
        - 人名
        - 地名
        - 组织机构
        - 时间
        - 产品名称
        
        以JSON格式返回结果。
        
        网页内容：
        {content}
      
      sentiment: |
        请分析以下网页内容的情感倾向，返回：
        - 情感极性：正面/负面/中性
        - 情感强度：1-10分
        - 情感关键词
        
        网页内容：
        {content}

# 爬取配置
crawl:
  # 支持的内容源类型
  content_sources:
    - "cleaned_html"  # 清理后的HTML内容（推荐）
    - "raw_html"      # 原始HTML内容
    - "fit_html"      # 适配后的HTML内容
  
  # 默认内容源类型
  default_source: "cleaned_html"
  
  # 爬取超时配置
  timeout:
    page_load: 30     # 页面加载超时，单位：秒
    request: 60       # 请求超时，单位：秒
    
  # 重试配置
  retry:
    max_attempts: 3
    delay: 1  # 重试间隔，单位：秒

# 日志配置
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # 日志文件配置
  files:
    server: "logs/server.log"
    ai_extraction: "logs/ai_extraction.log"
    database: "logs/database.log"
    minio: "logs/minio.log"
    
  # 日志轮转配置
  rotation:
    max_size: "10MB"
    backup_count: 5
    
# 安全配置
security:
  # API密钥验证（可选）
  api_key_required: false
  api_key: "your-api-key-here"
  
  # CORS配置
  cors:
    allow_origins: ["*"]
    allow_methods: ["GET", "POST", "PUT", "DELETE"]
    allow_headers: ["*"]
    
  # 请求限制
  rate_limit:
    enabled: false
    requests_per_minute: 60

# 缓存配置
cache:
  # Redis配置（可选）
  redis:
    enabled: false
    host: "localhost"
    port: 6379
    db: 0
    password: ""
    
  # 内存缓存配置
  memory:
    enabled: true
    max_size: 1000  # 最大缓存条目数
    ttl: 3600       # 缓存过期时间，单位：秒

# 监控配置
monitoring:
  # 健康检查
  health_check:
    enabled: true
    endpoint: "/health"
    
  # 指标收集
  metrics:
    enabled: false
    endpoint: "/metrics"